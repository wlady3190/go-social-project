para hpt reloading
AIR
 cambiar en la config tmp_dir = "bin"
  args_bin = []
  bin = "./bin/main"
  cmd = "go build -o ./bin/main ./cmd/api"
  delay = 1000
  exclude_dir = ["assets", "bin", "vendor", "testdata", "web", "docs", "scripts"] web por que ahi va el frontend, docs y scripts

instalar direnv
ejecutar direnv allow .

instalar golang migrate para migraciones

go get -u -d github.com/golang-migrate/migrate/cmd/migrate
Crear archivos de migraciones
migrate create -seq -ext sql -dir ./cmd/migrate/migrations/ create_users
Migrar las tablas
migrate -path= ./cmd/migrate/migrations -database="postgres://admin:adminpassword@localhost/social?sslmode=disable" up
forzar  auna determinada migraciÃ³n
migrate -path=./cmd/migrate/migrations -database="postgres://admin:adminpassword@localhost/social?sslmode=disable" force 1

Con el Makefile
make migrate-create name=alter_post_table

Validator
go get 	"github.com/go-playground/validator/v10"

SWAGGER
go install github.com/swaggo/swag/cmd/swag@latest
swag init
go get -u github.com/swaggo/http-swagger
y eso va en los imports de api.go

-> construir el comando en el makefile para ejecutar swagger

tener la carpeta de docs y el archivo de docs.go para que se generen los archivosy usar en el main y en api.go

para acceder: http://localhost:8080/v1/swagger/index.html


Para que se actualicen los docs, en air.toml -> actualizar    pre_cmd = ["make gen-docs"]

LOGGING ESTRUCTURADO